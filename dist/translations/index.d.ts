declare const _default: {
    de: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseBetweenCustomTextOrDocument: string;
            chooseDocumentToLink: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            customURL: string;
            editLink: string;
            editLabelData: string;
            enterURL: string;
            internalLink: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkType: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            openInNewTab: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            textToDisplay: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            requiresNoMoreThan: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    en: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingFile: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            block: string;
            blockType: string;
            blocks: string;
            chooseBetweenCustomTextOrDocument: string;
            chooseDocumentToLink: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            customURL: string;
            editLabelData: string;
            editLink: string;
            enterURL: string;
            internalLink: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkType: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            openInNewTab: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            textToDisplay: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showingVersionsFor: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCount_other: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    es: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    fr: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingFile: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocals: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    it: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingFile: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showingVersionsFor: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCount_other: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    ja: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    my: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            block: string;
            blockType: string;
            blocks: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            fieldHasNo: string;
            emailAddress: string;
            enterNumber: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    nl: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingFile: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    pl: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    pt: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    ru: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            block: string;
            blockType: string;
            blocks: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            notValidDate: string;
            required: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    vi: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingTitle: string;
            deletingFile: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
    sv: {
        $schema: string;
        authentication: {
            account: string;
            accountOfCurrentUser: string;
            alreadyActivated: string;
            alreadyLoggedIn: string;
            apiKey: string;
            backToLogin: string;
            beginCreateFirstUser: string;
            changePassword: string;
            checkYourEmailForPasswordReset: string;
            confirmGeneration: string;
            confirmPassword: string;
            createFirstUser: string;
            emailNotValid: string;
            emailSent: string;
            enableAPIKey: string;
            failedToUnlock: string;
            forceUnlock: string;
            forgotPassword: string;
            forgotPasswordEmailInstructions: string;
            forgotPasswordQuestion: string;
            generate: string;
            generateNewAPIKey: string;
            generatingNewAPIKeyWillInvalidate: string;
            lockUntil: string;
            logBackIn: string;
            logOut: string;
            loggedIn: string;
            loggedInChangePassword: string;
            loggedOutInactivity: string;
            loggedOutSuccessfully: string;
            login: string;
            loginAttempts: string;
            loginUser: string;
            loginWithAnotherUser: string;
            logout: string;
            logoutUser: string;
            newAPIKeyGenerated: string;
            newAccountCreated: string;
            newPassword: string;
            resetPassword: string;
            resetPasswordExpiration: string;
            resetPasswordToken: string;
            resetYourPassword: string;
            stayLoggedIn: string;
            successfullyUnlocked: string;
            unableToVerify: string;
            verified: string;
            verifiedSuccessfully: string;
            verify: string;
            verifyUser: string;
            verifyYourEmail: string;
            youAreInactive: string;
            youAreReceivingResetPassword: string;
            youDidNotRequestPassword: string;
        };
        error: {
            accountAlreadyActivated: string;
            autosaving: string;
            correctInvalidFields: string;
            deletingFile: string;
            deletingTitle: string;
            emailOrPasswordIncorrect: string;
            followingFieldsInvalid_many: string;
            followingFieldsInvalid_one: string;
            incorrectCollection: string;
            invalidFileType: string;
            invalidFileTypeValue: string;
            loadingDocument: string;
            missingEmail: string;
            missingIDOfDocument: string;
            missingIDOfVersion: string;
            missingRequiredData: string;
            noFilesUploaded: string;
            noMatchedField: string;
            noUser: string;
            notAllowedToAccessPage: string;
            notAllowedToPerformAction: string;
            notFound: string;
            problemUploadingFile: string;
            tokenInvalidOrExpired: string;
            unPublishingDocument: string;
            unauthorized: string;
            unknown: string;
            unspecific: string;
            userLocked: string;
            valueMustBeUnique: string;
            verificationTokenInvalid: string;
        };
        fields: {
            block: string;
            blocks: string;
            addLabel: string;
            addNew: string;
            addNewLabel: string;
            addRelationship: string;
            blockType: string;
            chooseFromExisting: string;
            chooseLabel: string;
            collapseAll: string;
            editLabelData: string;
            itemsAndMore: string;
            labelRelationship: string;
            latitude: string;
            linkedTo: string;
            longitude: string;
            newLabel: string;
            passwordsDoNotMatch: string;
            relatedDocument: string;
            relationTo: string;
            removeUpload: string;
            saveChanges: string;
            searchForBlock: string;
            selectExistingLabel: string;
            showAll: string;
            swapUpload: string;
            toggleBlock: string;
            uploadNewLabel: string;
        };
        general: {
            aboutToDelete: string;
            addBelow: string;
            addFilter: string;
            adminTheme: string;
            and: string;
            automatic: string;
            backToDashboard: string;
            cancel: string;
            changesNotSaved: string;
            collections: string;
            columnToSort: string;
            columns: string;
            confirm: string;
            confirmDeletion: string;
            confirmDuplication: string;
            copied: string;
            copy: string;
            create: string;
            createNew: string;
            createNewLabel: string;
            created: string;
            createdAt: string;
            creating: string;
            dark: string;
            dashboard: string;
            delete: string;
            deletedSuccessfully: string;
            deleting: string;
            descending: string;
            duplicate: string;
            duplicateWithoutSaving: string;
            editLabel: string;
            editing: string;
            email: string;
            emailAddress: string;
            enterAValue: string;
            filter: string;
            filterWhere: string;
            filters: string;
            globals: string;
            language: string;
            lastModified: string;
            leaveAnyway: string;
            leaveWithoutSaving: string;
            light: string;
            loading: string;
            locales: string;
            moveDown: string;
            moveUp: string;
            newPassword: string;
            noFiltersSet: string;
            noLabel: string;
            noResults: string;
            noValue: string;
            none: string;
            notFound: string;
            nothingFound: string;
            of: string;
            or: string;
            order: string;
            pageNotFound: string;
            password: string;
            payloadSettings: string;
            perPage: string;
            remove: string;
            row: string;
            rows: string;
            save: string;
            saving: string;
            searchBy: string;
            selectValue: string;
            sorryNotFound: string;
            sort: string;
            stayOnThisPage: string;
            submissionSuccessful: string;
            submit: string;
            successfullyCreated: string;
            successfullyDuplicated: string;
            thisLanguage: string;
            titleDeleted: string;
            unauthorized: string;
            unsavedChangesDuplicate: string;
            untitled: string;
            updatedAt: string;
            updatedSuccessfully: string;
            user: string;
            users: string;
            welcome: string;
        };
        upload: {
            dragAndDropHere: string;
            fileName: string;
            fileSize: string;
            height: string;
            lessInfo: string;
            moreInfo: string;
            selectCollectionToBrowse: string;
            selectFile: string;
            sizes: string;
            width: string;
        };
        validation: {
            emailAddress: string;
            enterNumber: string;
            fieldHasNo: string;
            greaterThanMax: string;
            invalidInput: string;
            invalidSelection: string;
            invalidSelections: string;
            lessThanMin: string;
            longerThanMin: string;
            notValidDate: string;
            required: string;
            requiresAtLeast: string;
            requiresNoMoreThan: string;
            requiresTwoNumbers: string;
            shorterThanMax: string;
            trueOrFalse: string;
            validUploadID: string;
        };
        version: {
            aboutToRestore: string;
            aboutToRestoreGlobal: string;
            aboutToRevertToPublished: string;
            aboutToUnpublish: string;
            autosave: string;
            autosavedSuccessfully: string;
            autosavedVersion: string;
            changed: string;
            compareVersion: string;
            confirmRevertToSaved: string;
            confirmUnpublish: string;
            confirmVersionRestoration: string;
            currentDocumentStatus: string;
            draft: string;
            draftSavedSuccessfully: string;
            lastSavedAgo: string;
            noFurtherVersionsFound: string;
            noRowsFound: string;
            preview: string;
            problemRestoringVersion: string;
            publishChanges: string;
            published: string;
            restoreThisVersion: string;
            restoredSuccessfully: string;
            restoring: string;
            revertToPublished: string;
            reverting: string;
            saveDraft: string;
            selectLocales: string;
            selectVersionToCompare: string;
            showLocales: string;
            status: string;
            type: string;
            unpublish: string;
            unpublishing: string;
            version: string;
            versionCount_many: string;
            versionCount_none: string;
            versionCount_one: string;
            versionCreatedOn: string;
            versionID: string;
            versions: string;
            viewingVersion: string;
            viewingVersionGlobal: string;
            viewingVersions: string;
            viewingVersionsGlobal: string;
        };
    };
};
export default _default;
